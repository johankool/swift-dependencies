name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  macos-15:
    name: macOS 15
    runs-on: macos-15
    strategy:
      matrix:
        config: ['debug', 'release']
        xcode: ['16.0']
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Skip macro validation
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: Run tests
        run: make test-swift
      - name: Build platforms ${{ matrix.config }}
        run: CONFIG=${{ matrix.config }} make build-all-platforms
      - name: Build for library evolution
        run: make build-for-library-evolution

  macos-14:
    name: macOS 14
    runs-on: macos-14
    strategy:
      matrix:
        config: ['debug', 'release']
        xcode: ['15.4']
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Skip macro validation
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: Run tests
        run: make test-swift
      - name: Build platforms ${{ matrix.config }}
        run: CONFIG=${{ matrix.config }} make build-all-platforms
      - name: Build for library evolution
        run: make build-for-library-evolution

  ubuntu:
    strategy:
      matrix:
        swift:
          - '5.10'
    name: Ubuntu (Swift ${{ matrix.swift }})
    runs-on: ubuntu-latest
    container: swift:${{ matrix.swift }}
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: swift test --parallel
      - name: Run tests (release)
        run: swift test -c release --parallel

  # wasm:
  #   name: Wasm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: bytecodealliance/actions/wasmtime/setup@v1
  #     - uses: swiftwasm/setup-swiftwasm@v1
  #       with:
  #         swift-version: "wasm-5.9.2-RELEASE"
  #     - name: Build tests
  #       run: swift build --triple wasm32-unknown-wasi --build-tests
  #     - name: Run tests
  #       run: wasmtime .build/debug/swift-dependenciesPackageTests.wasm

  # windows:
  #   name: Windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: compnerd/gha-setup-swift@main
  #       with:
  #         branch: swift-5.10-release
  #         tag: 5.10-RELEASE
  #
  #     - uses: actions/checkout@v4
  #     - name: Run tests
  #       run: swift test
  #     - name: Run tests (release)
  #       run: swift test -c release

  check-macro-compatibility:
    name: Check Macro Compatibility
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Swift Macro Compatibility Check
        uses: Matejkob/swift-macro-compatibility-check@v1
        with:
          run-tests: false
          major-versions-only: true

  android:
    name: Android (Swift 6.0.2)
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Swift
        uses: tayloraswift/swift-install-action@master
        with:
          swift-prefix: swift-6.0.2-release/ubuntu2204/swift-6.0.2-RELEASE
          swift-id: swift-6.0.2-RELEASE-ubuntu22.04
      - name: Check Swift
        run: swift --version
      - name: Install Android SDK
        run:
          swift sdk install https://github.com/finagolfin/swift-android-sdk/releases/download/6.0.2/swift-6.0.2-RELEASE-android-24-0.1.artifactbundle.tar.gz --checksum d75615eac3e614131133c7cc2076b0b8fb4327d89dce802c25cd53e75e1881f4
      - name: Check Android SDK
        run:
          swift sdk configure --show-configuration swift-6.0.2-RELEASE-android-24-0.1 x86_64-unknown-linux-android24
      - name: Build Tests
        run:
          swift build --build-tests --swift-sdk x86_64-unknown-linux-android24 -Xswiftc -Xclang-linker -Xswiftc -fuse-ld=lld
      - name: Prepare Android Emulator Test Script
        run: |
          mkdir pack
          cp .build/x86_64-unknown-linux-android24/debug/swift-dependenciesPackageTests.xctest pack
          
          cp /home/runner/.config/swiftpm/swift-sdks/swift-6.0.2-RELEASE-android-24-0.1.artifactbundle/swift-6.0.2-release-android-24-sdk/android-27c-sysroot/usr/lib/x86_64-linux-android/24/lib*.so pack
          rm pack/lib{c,dl,log,m,z}.so

          set -x
          cat > ~/test-toolchain.sh << EOF
          adb push pack /data/local/tmp
          adb shell /data/local/tmp/pack/swift-dependenciesPackageTests.xctest
          EOF
          
          chmod +x ~/test-toolchain.sh
      - name: Run Tests on Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          script: ~/test-toolchain.sh